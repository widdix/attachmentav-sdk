/**
 * attachmentAV
 * An SDK to integrate virus and malware scan capabilities into JavaScript applications. Scan files for viruses, trojans, and other kinds of malware with attachmentAV powered by Sophos.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */

import ApiClient from '../ApiClient';

/**
 * The AsyncS3ScanRequest model module.
 * @module model/AsyncS3ScanRequest
 * @version 0.1.0
 */
class AsyncS3ScanRequest {
    /**
     * Constructs a new <code>AsyncS3ScanRequest</code>.
     * @alias module:model/AsyncS3ScanRequest
     * @param bucket {String} 
     * @param key {String} 
     * @param callbackUrl {String} 
     */
    constructor(bucket, key, callbackUrl) { 
        
        AsyncS3ScanRequest.initialize(this, bucket, key, callbackUrl);
    }

    /**
     * Initializes the fields of this object.
     * This method is used by the constructors of any subclasses, in order to implement multiple inheritance (mix-ins).
     * Only for internal use.
     */
    static initialize(obj, bucket, key, callbackUrl) { 
        obj['bucket'] = bucket;
        obj['key'] = key;
        obj['callback_url'] = callbackUrl;
    }

    /**
     * Constructs a <code>AsyncS3ScanRequest</code> from a plain JavaScript object, optionally creating a new instance.
     * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @param {module:model/AsyncS3ScanRequest} obj Optional instance to populate.
     * @return {module:model/AsyncS3ScanRequest} The populated <code>AsyncS3ScanRequest</code> instance.
     */
    static constructFromObject(data, obj) {
        if (data) {
            obj = obj || new AsyncS3ScanRequest();

            if (data.hasOwnProperty('bucket')) {
                obj['bucket'] = ApiClient.convertToType(data['bucket'], 'String');
            }
            if (data.hasOwnProperty('key')) {
                obj['key'] = ApiClient.convertToType(data['key'], 'String');
            }
            if (data.hasOwnProperty('version')) {
                obj['version'] = ApiClient.convertToType(data['version'], 'String');
            }
            if (data.hasOwnProperty('callback_url')) {
                obj['callback_url'] = ApiClient.convertToType(data['callback_url'], 'String');
            }
            if (data.hasOwnProperty('callback_headers')) {
                obj['callback_headers'] = ApiClient.convertToType(data['callback_headers'], {'String': 'String'});
            }
            if (data.hasOwnProperty('trace_id')) {
                obj['trace_id'] = ApiClient.convertToType(data['trace_id'], 'String');
            }
            if (data.hasOwnProperty('custom_data')) {
                obj['custom_data'] = ApiClient.convertToType(data['custom_data'], 'String');
            }
        }
        return obj;
    }

    /**
     * Validates the JSON data with respect to <code>AsyncS3ScanRequest</code>.
     * @param {Object} data The plain JavaScript object bearing properties of interest.
     * @return {boolean} to indicate whether the JSON data is valid with respect to <code>AsyncS3ScanRequest</code>.
     */
    static validateJSON(data) {
        // check to make sure all required properties are present in the JSON string
        for (const property of AsyncS3ScanRequest.RequiredProperties) {
            if (!data.hasOwnProperty(property)) {
                throw new Error("The required field `" + property + "` is not found in the JSON data: " + JSON.stringify(data));
            }
        }
        // ensure the json data is a string
        if (data['bucket'] && !(typeof data['bucket'] === 'string' || data['bucket'] instanceof String)) {
            throw new Error("Expected the field `bucket` to be a primitive type in the JSON string but got " + data['bucket']);
        }
        // ensure the json data is a string
        if (data['key'] && !(typeof data['key'] === 'string' || data['key'] instanceof String)) {
            throw new Error("Expected the field `key` to be a primitive type in the JSON string but got " + data['key']);
        }
        // ensure the json data is a string
        if (data['version'] && !(typeof data['version'] === 'string' || data['version'] instanceof String)) {
            throw new Error("Expected the field `version` to be a primitive type in the JSON string but got " + data['version']);
        }
        // ensure the json data is a string
        if (data['callback_url'] && !(typeof data['callback_url'] === 'string' || data['callback_url'] instanceof String)) {
            throw new Error("Expected the field `callback_url` to be a primitive type in the JSON string but got " + data['callback_url']);
        }
        // ensure the json data is a string
        if (data['trace_id'] && !(typeof data['trace_id'] === 'string' || data['trace_id'] instanceof String)) {
            throw new Error("Expected the field `trace_id` to be a primitive type in the JSON string but got " + data['trace_id']);
        }
        // ensure the json data is a string
        if (data['custom_data'] && !(typeof data['custom_data'] === 'string' || data['custom_data'] instanceof String)) {
            throw new Error("Expected the field `custom_data` to be a primitive type in the JSON string but got " + data['custom_data']);
        }

        return true;
    }


}

AsyncS3ScanRequest.RequiredProperties = ["bucket", "key", "callback_url"];

/**
 * @member {String} bucket
 */
AsyncS3ScanRequest.prototype['bucket'] = undefined;

/**
 * @member {String} key
 */
AsyncS3ScanRequest.prototype['key'] = undefined;

/**
 * @member {String} version
 */
AsyncS3ScanRequest.prototype['version'] = undefined;

/**
 * @member {String} callback_url
 */
AsyncS3ScanRequest.prototype['callback_url'] = undefined;

/**
 * @member {Object.<String, String>} callback_headers
 */
AsyncS3ScanRequest.prototype['callback_headers'] = undefined;

/**
 * @member {String} trace_id
 */
AsyncS3ScanRequest.prototype['trace_id'] = undefined;

/**
 * @member {String} custom_data
 */
AsyncS3ScanRequest.prototype['custom_data'] = undefined;






export default AsyncS3ScanRequest;

