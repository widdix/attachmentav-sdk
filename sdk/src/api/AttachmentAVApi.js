/**
 * attachmentAV
 * Scan files for viruses, trojans, and other kinds of malware.
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 *
 */


import ApiClient from "../ApiClient";
import ScanResult from '../model/ScanResult';
import SyncDownloadScanRequest from '../model/SyncDownloadScanRequest';
import SyncS3ScanRequest from '../model/SyncS3ScanRequest';

/**
* AttachmentAV service.
* @module api/AttachmentAVApi
* @version 1.0.0
*/
export default class AttachmentAVApi {

    /**
    * Constructs a new AttachmentAVApi. 
    * @alias module:api/AttachmentAVApi
    * @class
    * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
    * default to {@link module:ApiClient#instance} if unspecified.
    */
    constructor(apiClient) {
        this.apiClient = apiClient || ApiClient.instance;
    }


    /**
     * Callback function to receive the result of the scanSyncBinaryPost operation.
     * @callback module:api/AttachmentAVApi~scanSyncBinaryPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ScanResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upload a file, scan the file, and return the scan result.
     * @param {File} body 
     * @param {module:api/AttachmentAVApi~scanSyncBinaryPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ScanResult}
     */
    scanSyncBinaryPost(body, callback) {
      let postBody = body;
      // verify the required parameter 'body' is set
      if (body === undefined || body === null) {
        throw new Error("Missing the required parameter 'body' when calling scanSyncBinaryPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyAuth'];
      let contentTypes = ['application/octet-stream'];
      let accepts = ['application/json'];
      let returnType = ScanResult;
      return this.apiClient.callApi(
        '/scan/sync/binary', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the scanSyncDownloadPost operation.
     * @callback module:api/AttachmentAVApi~scanSyncDownloadPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ScanResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download a file from a remote location (HTTP/HTTPS), scan the file, and return the scan result.
     * @param {module:model/SyncDownloadScanRequest} syncDownloadScanRequest 
     * @param {module:api/AttachmentAVApi~scanSyncDownloadPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ScanResult}
     */
    scanSyncDownloadPost(syncDownloadScanRequest, callback) {
      let postBody = syncDownloadScanRequest;
      // verify the required parameter 'syncDownloadScanRequest' is set
      if (syncDownloadScanRequest === undefined || syncDownloadScanRequest === null) {
        throw new Error("Missing the required parameter 'syncDownloadScanRequest' when calling scanSyncDownloadPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ScanResult;
      return this.apiClient.callApi(
        '/scan/sync/download', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the scanSyncFormPost operation.
     * @callback module:api/AttachmentAVApi~scanSyncFormPostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ScanResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Upload a file, scan the file, and return the scan result.
     * @param {File} file 
     * @param {module:api/AttachmentAVApi~scanSyncFormPostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ScanResult}
     */
    scanSyncFormPost(file, callback) {
      let postBody = null;
      // verify the required parameter 'file' is set
      if (file === undefined || file === null) {
        throw new Error("Missing the required parameter 'file' when calling scanSyncFormPost");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
        'file': file
      };

      let authNames = ['apiKeyAuth'];
      let contentTypes = ['multipart/form-data'];
      let accepts = ['application/json'];
      let returnType = ScanResult;
      return this.apiClient.callApi(
        '/scan/sync/form', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }

    /**
     * Callback function to receive the result of the scanSyncS3Post operation.
     * @callback module:api/AttachmentAVApi~scanSyncS3PostCallback
     * @param {String} error Error message, if any.
     * @param {module:model/ScanResult} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * Download a file from S3, scan the file, and return the scan result. A bucket policy is required to grant attachmentAV access to the S3 objects.
     * @param {module:model/SyncS3ScanRequest} syncS3ScanRequest 
     * @param {module:api/AttachmentAVApi~scanSyncS3PostCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/ScanResult}
     */
    scanSyncS3Post(syncS3ScanRequest, callback) {
      let postBody = syncS3ScanRequest;
      // verify the required parameter 'syncS3ScanRequest' is set
      if (syncS3ScanRequest === undefined || syncS3ScanRequest === null) {
        throw new Error("Missing the required parameter 'syncS3ScanRequest' when calling scanSyncS3Post");
      }

      let pathParams = {
      };
      let queryParams = {
      };
      let headerParams = {
      };
      let formParams = {
      };

      let authNames = ['apiKeyAuth'];
      let contentTypes = ['application/json'];
      let accepts = ['application/json'];
      let returnType = ScanResult;
      return this.apiClient.callApi(
        '/scan/sync/s3', 'POST',
        pathParams, queryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, null, callback
      );
    }


}
